[{"/home/primeminister/Documents/FullStackCodeLearning/FreeCodeCamp/FrontEndDevelopmentLibraries/RandomQuoteMachine/src/index.tsx":"1","/home/primeminister/Documents/FullStackCodeLearning/FreeCodeCamp/FrontEndDevelopmentLibraries/RandomQuoteMachine/src/App.tsx":"2","/home/primeminister/Documents/FullStackCodeLearning/FreeCodeCamp/FrontEndDevelopmentLibraries/RandomQuoteMachine/src/API.ts":"3","/home/primeminister/Documents/FullStackCodeLearning/FreeCodeCamp/FrontEndDevelopmentLibraries/RandomQuoteMachine/src/components/QuotesCard.tsx":"4","/home/primeminister/Documents/FullStackCodeLearning/FreeCodeCamp/FrontEndDevelopmentLibraries/RandomQuoteMachine/src/App.styles.ts":"5","/home/primeminister/Documents/FullStackCodeLearning/FreeCodeCamp/FrontEndDevelopmentLibraries/RandomQuoteMachine/src/components/QuotesCard.styles.ts":"6"},{"size":198,"mtime":1626443373905,"results":"7","hashOfConfig":"8"},{"size":2861,"mtime":1626795579256,"results":"9","hashOfConfig":"8"},{"size":469,"mtime":1626369187681,"results":"10","hashOfConfig":"8"},{"size":2492,"mtime":1626712218888,"results":"11","hashOfConfig":"8"},{"size":803,"mtime":1626765153725,"results":"12","hashOfConfig":"8"},{"size":2448,"mtime":1626765141745,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"18dp1je",{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"/home/primeminister/Documents/FullStackCodeLearning/FreeCodeCamp/FrontEndDevelopmentLibraries/RandomQuoteMachine/src/index.tsx",[],["29","30"],"/home/primeminister/Documents/FullStackCodeLearning/FreeCodeCamp/FrontEndDevelopmentLibraries/RandomQuoteMachine/src/App.tsx",["31","32","33"],"/home/primeminister/Documents/FullStackCodeLearning/FreeCodeCamp/FrontEndDevelopmentLibraries/RandomQuoteMachine/src/API.ts",[],"/home/primeminister/Documents/FullStackCodeLearning/FreeCodeCamp/FrontEndDevelopmentLibraries/RandomQuoteMachine/src/components/QuotesCard.tsx",["34"],"import React from 'react';\nimport { ComponentWrapper } from './QuotesCard.styles';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons'\nimport ContentLoader from 'react-content-loader'\n \ninterface Props {\n    author: string;\n    quote: string;\n    callback: React.MouseEventHandler;\n    colors: string[][];\n    isLoading: boolean;\n    fade: boolean;\n}\n\nconst QuotesCard: React.FunctionComponent<Props> = ({\n    author,\n    quote,\n    callback,\n    colors,\n    isLoading,\n    fade,\n}) => {\n    \nconst MyLoader = () => (\n    <>\n        <div id=\"author\"></div>\n        <ContentLoader backgroundColor=\"rgba(145, 145, 145, 0.2)\" foregroundColor=\"rgba(255, 255, 255, 0.2)\">\n            <rect x=\"0\" y=\"5\" rx=\"4\" ry=\"4\" width=\"40vw\" height=\"13\" />\n            <rect x=\"0\" y=\"25\" rx=\"4\" ry=\"4\" width=\"40vw\" height=\"13\" />\n            <rect x=\"0\" y=\"45\" rx=\"4\" ry=\"4\" width=\"40vw\" height=\"13\" />\n            <rect x=\"0\" y=\"65\" rx=\"4\" ry=\"4\" width=\"40vw\" height=\"13\" />\n            <rect x=\"0\" y=\"85\" rx=\"4\" ry=\"4\" width=\"40vw\" height=\"13\" />\n            <rect x=\"0\" y=\"105\" rx=\"4\" ry=\"4\" width=\"40vw\" height=\"13\" />\n            <rect x=\"0\" y=\"125\" rx=\"4\" ry=\"4\" width=\"40vw\" height=\"13\" />\n        </ContentLoader>\n    </>\n  );\n    return (\n        <>\n            <ComponentWrapper col={colors} fade={fade} >\n                <div id=\"background\">\n                    <div id=\"quote-box\">\n                        {!isLoading && (\n                            <>\n                            <div id=\"text\">{quote}</div>\n                            <div id=\"author\">- {author}</div>\n                            </>\n                        )}\n                        {isLoading && (\n                            <MyLoader />\n                            \n                        )}\n                    \n                        <div className=\"button-box\">\n                            <div className=\"twitter\">\n                                <a href=\"https://twitter.com/intent/tweet\" id=\"tweet-quote\" target=\"_blank\">\n                                    <FontAwesomeIcon icon={faTwitter} />\n                                </a>\n                            </div>\n                            <button id=\"new-quote\" onClick={callback}>New Quote</button>\n                        </div>\n                    </div>\n                    \n                </div>\n            </ComponentWrapper>\n        </>\n    )}\n\nexport default QuotesCard;","/home/primeminister/Documents/FullStackCodeLearning/FreeCodeCamp/FrontEndDevelopmentLibraries/RandomQuoteMachine/src/App.styles.ts",[],"/home/primeminister/Documents/FullStackCodeLearning/FreeCodeCamp/FrontEndDevelopmentLibraries/RandomQuoteMachine/src/components/QuotesCard.styles.ts",["35","36"],"import styled from 'styled-components';\n\ninterface IComponentWrapper {\n    col: string[][];\n    fade: boolean;\n}\n\nexport const ComponentWrapper = styled.div<IComponentWrapper>`\n    align-self: center;\n\n    #background {\n        background-color: ${props => props.col[0][0]};\n        width: 60vw;\n        min-height: 10rem;\n        display: flex;\n        flex-direction: column;\n        border-radius: 3rem;\n        animation: changeColor 3s ease;\n        \n    }\n\n    @keyframes changeColor {\n        from {\n            background-color: ${props => { if (props.col.length == 2) return props.col[1][0];\n                                           else return props.col[0][0] }};\n        }\n        to {\n            background-color: ${props => props.col[0][0]};\n        }\n    }\n\n    #quote-box {\n        color: ${props => { if (props.col.length == 2) return props.col[1][1];\n                            else return props.col[0][1] }};\n        align-self: stretch;\n        width: auto;\n        height: 100%;\n        padding: 10vh 10vw 5vh 10vw;\n        display: flex;\n        flex-direction: column;\n        \n    }\n    #text {\n        font-size: 1.5rem;\n    }\n\n    #author {\n        margin-top: 3vh;\n        align-self: flex-end;\n        width: fit-content;\n        font-size: 0.9rem;\n    }\n\n    #text, #author {\n        animation: fadeInOut 1s;\n        transition: opacity 1s ease;\n    }\n\n    @keyframes fadeInOut {\n        from {\n            opacity: ${props => {\n                if (props.fade){\n                    return 1;\n                }\n                else {\n                    return 0;\n                }\n\n            }};\n        }\n\n        to {\n            opacity: ${props => {\n                if (props.fade){\n                    return 0;\n                }\n                else {\n                    return 1;\n                }\n\n            }};\n        }\n    }\n\n    .button-box {\n        height: 3rem;\n        display: grid;\n        margin-top: 3rem;\n        grid-template-columns: 1fr 1fr;\n    }\n\n    .button-box .twitter {\n        margin-top: 0.5rem;\n        font-size: 3rem;\n        line-height: 100%;\n    }\n\n    .button-box .twitter a {\n        text-decoration: none;\n        color: white;\n    } \n\n    .button-box button {\n        justify-self: self-end;\n        padding: 0.75rem 0.75rem;\n        width: fit-content;\n        background-color: yellow;\n        box-shadow: inset 1px 1px 10px #333;\n        border-radius: 1rem;\n    }\n`",{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":11,"column":21,"nodeType":"43","messageId":"44","endLine":11,"endColumn":33},{"ruleId":"45","severity":1,"message":"46","line":61,"column":5,"nodeType":"47","endLine":61,"endColumn":11,"suggestions":"48"},{"ruleId":"45","severity":1,"message":"49","line":68,"column":5,"nodeType":"47","endLine":68,"endColumn":7,"suggestions":"50"},{"ruleId":"51","severity":1,"message":"52","line":57,"column":33,"nodeType":"53","messageId":"54","endLine":57,"endColumn":109,"fix":"55"},{"ruleId":"56","severity":1,"message":"57","line":24,"column":65,"nodeType":"58","messageId":"59","endLine":24,"endColumn":67},{"ruleId":"56","severity":1,"message":"57","line":33,"column":50,"nodeType":"58","messageId":"59","endLine":33,"endColumn":52},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"@typescript-eslint/no-unused-vars","'setIsFadeOut' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'colors'. Either include it or remove the dependency array.","ArrayExpression",["62"],"React Hook useEffect has a missing dependency: 'generateNewQuote'. Either include it or remove the dependency array.",["63"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"64","text":"65"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"66","fix":"67"},{"desc":"68","fix":"69"},[2076,2076]," rel=\"noreferrer\"","Update the dependencies array to be: [colors, flip]",{"range":"70","text":"71"},"Update the dependencies array to be: [generateNewQuote]",{"range":"72","text":"73"},[1890,1896],"[colors, flip]",[2007,2009],"[generateNewQuote]"]