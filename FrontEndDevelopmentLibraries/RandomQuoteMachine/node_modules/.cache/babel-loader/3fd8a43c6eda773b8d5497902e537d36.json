{"ast":null,"code":"import styled, { createGlobalStyle } from 'styled-components';\nexport const GlobalStyle = createGlobalStyle`\n    * {\n        padding: 0;\n        margin: 0;\n        box-sizing: border-box;\n    }\n`;\nexport const BodyWrapper = styled.div`\n\n    #body-wrapper { display: flex;\n    animation: changeColor 3s ease;\n    height: 100vh;\n    justify-content: center;\n    }\n    @keyframes changeColor {\n        from { background-color: ${props => {\n  if (props.colorBody.length == 2) return props.colorBody[1][0];else return props.colorBody[0][0];\n}};\n        }\n        to {\n            background-color: ${props => props.colorBody[0][0]}};\n        }\n    \n`;","map":{"version":3,"sources":["/home/primeminister/Documents/FullStackCodeLearning/FreeCodeCamp/FrontEndDevelopmentLibraries/RandomQuoteMachine/src/App.styles.ts"],"names":["styled","createGlobalStyle","GlobalStyle","BodyWrapper","div","props","colorBody","length"],"mappings":"AAAA,OAAOA,MAAP,IAAiBC,iBAAjB,QAA0C,mBAA1C;AAEA,OAAO,MAAMC,WAAW,GAAGD,iBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA,CANO;AAYP,OAAO,MAAME,WAAW,GAAGH,MAAM,CAACI,GAAa;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmCC,KAAK,IAAI;AAAE,MAAIA,KAAK,CAACC,SAAN,CAAgBC,MAAhB,IAA0B,CAA9B,EAAiC,OAAOF,KAAK,CAACC,SAAN,CAAgB,CAAhB,EAAmB,CAAnB,CAAP,CAAjC,KACN,OAAOD,KAAK,CAACC,SAAN,CAAgB,CAAhB,EAAmB,CAAnB,CAAP;AAA8B,CAAC;AACvE;AACA;AACA,gCAAgCD,KAAK,IAAIA,KAAK,CAACC,SAAN,CAAgB,CAAhB,EAAmB,CAAnB,CAAuB;AAChE;AACA;AACA,CAfO","sourcesContent":["import styled, { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n    * {\n        padding: 0;\n        margin: 0;\n        box-sizing: border-box;\n    }\n`;\n\ninterface IColors {\n    colorBody: string[][];\n}\n\nexport const BodyWrapper = styled.div<IColors>`\n\n    #body-wrapper { display: flex;\n    animation: changeColor 3s ease;\n    height: 100vh;\n    justify-content: center;\n    }\n    @keyframes changeColor {\n        from { background-color: ${props => { if (props.colorBody.length == 2) return props.colorBody[1][0];\n                                   else return props.colorBody[0][0] }};\n        }\n        to {\n            background-color: ${props => props.colorBody[0][0] }};\n        }\n    \n`;\n\n"]},"metadata":{},"sourceType":"module"}